/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lk.ElectronicsFSE;

import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.Color;
import java.awt.Font;
import static java.lang.String.format;
import static java.text.MessageFormat.format;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import static jdk.nashorn.api.scripting.ScriptUtils.format;

/**
 *
 * @author user
 */
public class Home extends javax.swing.JFrame {

    private final JLabel[] binaryLabels = new JLabel[8];

    public Home() {
        initComponents();
        loadBinaryLabels();
    }

    private void loadBinaryLabels() {
        for (int i = 0; i < 8; i++) {
            binaryLabels[i] = new JLabel("0", SwingConstants.CENTER);
            binaryLabels[i].setOpaque(true);
            binaryLabels[i].setBackground(Color.LIGHT_GRAY);
            binaryLabels[i].setFont(new Font("Arial", Font.BOLD, 14));
            Display.add(binaryLabels[i]);
        }
    }

    private void showError(String meassage) {
        JOptionPane.showMessageDialog(this, meassage, "Execution Error", JOptionPane.ERROR_MESSAGE);

    }

    private void updateBinaryDisplay(String binary) {
        String s = String.format("%8$", binary).replace(' ', '0');
        for (int i = 0; i < 8; i++) {
            char c = s.charAt(i);
            binaryLabels[i].setText(String.valueOf(c));
            binaryLabels[i].setBackground((c == '1' ? color.GREEN : color.LIGHT_GRAY));

        }
    }

    private void Convert() {
        String input = InputField.getText().trim();
        String format = String.valueOf(FormatSelector.getselectedItem());
        if (format.equalsIgnoreCase("binary")) {

        } else if (format.equalsIgnoreCase("decimal")) {

        }
    }

    private void convert() {
        String input = InputField.getText().trim();
        String formate = String.valueOf(FormatSelector.getSelectedItem());
        if (format.equalsIgnorCase("binary")) {
           if(!input matches("[1,0] {1,8}")){
             showError("Enter a valid binary value (up to 8 bits)");
             return;
           }
           String binary = String .format("%8s",input).replace(' ', '0');
           int decimal;
           if(SignRadio.isSelected()){
               char c = binary.charAt(0);
               decimal = c == '1' ? Integer.parseInt(binary,2) - 256: Integer.parseInt(binary,2);
               ResultLable.setText ("Signed Decimal:" + decimal);
           }else{ //unsignRadio
               decimal = Integer.parseInt(binary,2);
                        ResultLable.setText ("unsigned Decimal:" + decimal);
           }
        } else if (format.equalsIgnorCase("decimal")) {
            if(!input.matches("-?\\d+")){
                showError("Enter Valid decimal number");
                return;
            }
            try{
                int number = Integer.parseInt(input);
                String binary;
                if(SignRadio.isSelected()){
                  if (number < -120 || number > 127){
                    throw new NumberFormatException();
                }
                  binary = String.format("%8s", Integer.toBinaryString(number & 0xff)).replace(' ','0');
                   ResultLable.setText ("Signed binary:" + binary);
                }else{//if unsigned radio selected
                  if (number < -0 || number > 255){
                    throw new NumberFormatException();
                }  
                  binary = String.format("%8s", Integer.toBinaryString(number & 0xff)).replace(' ','0');
                   ResultLable.setText ("Signed binary:" + binary);
                }
            }catch(NumberFormatException e){
                showError("Enter Valid decimal number");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        FormatSelector = new javax.swing.JComboBox<>();
        InputField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        UnSignedRadio = new javax.swing.JRadioButton();
        SignRadio = new javax.swing.JRadioButton();
        Display = new javax.swing.JPanel();
        ResultLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Decimal Simulator");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Enter Decimal OR Binary Values");

        FormatSelector.setBackground(new java.awt.Color(51, 0, 51));
        FormatSelector.setEditable(true);
        FormatSelector.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FormatSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Binary ", "Decimal" }));
        FormatSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormatSelectorActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 0));
        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(UnSignedRadio);
        UnSignedRadio.setSelected(true);
        UnSignedRadio.setText("UnSigned (0-255)");

        buttonGroup1.add(SignRadio);
        SignRadio.setText("Signed (-128 to 127)");

        Display.setBackground(new java.awt.Color(255, 255, 255));
        Display.setLayout(new java.awt.GridLayout(1, 8, 5, 5));

        ResultLable.setText("Result Lable");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(FormatSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(InputField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UnSignedRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SignRadio))
                            .addComponent(ResultLable))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FormatSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnSignedRadio)
                    .addComponent(SignRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ResultLable)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FormatSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormatSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormatSelectorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        convert();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        FlatIntelliJLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Display;
    private javax.swing.JComboBox<String> FormatSelector;
    private javax.swing.JTextField InputField;
    private javax.swing.JLabel ResultLable;
    private javax.swing.JRadioButton SignRadio;
    private javax.swing.JRadioButton UnSignedRadio;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}